#include <stdio.h>
#include <unistd.h>
#include <sys/wait.h>
#include <stdlib.h>

void display(int res) {
    printf("Parent process (PID: %d) Sum: %d\n", getpid(), res);
}

int sum(int arr[], int n) {
    int res = 0;
    for (int j = 0; j < n; j++) {
        res += arr[j];
    }
    return res;
}

int main() {
    int n;

    printf("Enter number of elements: ");
    scanf("%d", &n);

    int arr[n];
    printf("Enter %d elements:\n", n);
    for (int i = 0; i < n; i++) {
        scanf("%d", &arr[i]);
    }

    int pipefd[2];
    if (pipe(pipefd) == -1) {
        perror("Pipe failed");
        return 1;
    }

    int f = fork();

    if (f < 0) {
        perror("Fork error");
        return 1;
    }

    if (f == 0) {
        // Child process
        close(pipefd[0]); // Close reading end
        int result = sum(arr, n);
        write(pipefd[1], &result, sizeof(result));
        close(pipefd[1]);
        exit(0);
    } else {
        // Parent process
        close(pipefd[1]); // Close writing end
        int res;
        wait(NULL);
        read(pipefd[0], &res, sizeof(res));
        close(pipefd[0]);
        display(res);
    }

    return 0;
}
//without if conditions
 #include <stdio.h>
#include <unistd.h>

int main(){
        int fd[2];

        pipe(fd);
        if(fork()==0){
                int arr[5];
                int sum = 0;
                read(fd[0],arr,sizeof(arr));
                for(int i=0;i<5; sum +=arr[i++]);
                write(fd[1],&sum,sizeof(sum));
        }else{
                int arr[5]={1,2,3,4,5};
                int sum;
                write(fd[1],arr,sizeof(arr));
                sleep(1);
                read(fd[0],&sum,sizeof(sum));
                printf("Sum = %d\n",sum);
        }

}
